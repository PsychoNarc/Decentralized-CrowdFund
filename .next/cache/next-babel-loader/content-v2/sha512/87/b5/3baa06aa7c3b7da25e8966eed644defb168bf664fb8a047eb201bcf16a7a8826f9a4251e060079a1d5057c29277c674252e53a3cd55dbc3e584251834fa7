{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\margrop\\\\Solidity\\\\crowdfund\\\\components\\\\RequestsRow.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      disabled: request.complete,\n      children: [/*#__PURE__*/_jsxDEV(Cell, {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: web3.utils.fromWei(request.value, 'ether')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.recipient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: [request.approvalCount, \"/\", approversCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: this.onApprove,\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          color: \"teal\",\n          onClick: this.onFinalize,\n          children: \"Finalize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["C:/margrop/Solidity/crowdfund/components/RequestsRow.js"],"names":["React","Component","Table","Button","web3","Campaign","RequestRow","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","readyToFinalize","approvalCount","complete","description","utils","fromWei","value","recipient","onApprove","onFinalize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAkC;AAAA;AAAA;;AAAA,uCACnB,YAAS;AAChB,YAAMM,QAAQ,GAAEF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAxB;AACA,YAAMC,QAAQ,GAAE,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAtB;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBC,cAAjB,CAAgC,KAAKN,KAAL,CAAWO,EAA3C,EAA+CC,IAA/C,CAAoD;AACtDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADwC,OAApD,CAAN;AAGH,KAP6B;;AAAA,wCAQlB,YAAS;AACjB,YAAMH,QAAQ,GAAEF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAxB;AACA,YAAMC,QAAQ,GAAE,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAtB;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBK,eAAjB,CAAiC,KAAKV,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AACvDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADyC,OAArD,CAAN;AAGH,KAd6B;AAAA;;AAe9BS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,QAAanB,KAAnB;AACA,UAAM;AAACa,MAAAA,EAAD;AAAKO,MAAAA,OAAL;AAAcC,MAAAA;AAAd,QAA+B,KAAKf,KAA1C;AACA,UAAMgB,eAAe,GAAEF,OAAO,CAACG,aAAR,GAAuBF,cAAc,GAAC,CAA7D;AACA,wBACI,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAED,OAAO,CAACI,QAAvB;AAAA,8BACI,QAAC,IAAD;AAAA,kBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAA,kBAAOO,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAA,kBAAOvB,IAAI,CAACwB,KAAL,CAAWC,OAAX,CAAmBP,OAAO,CAACQ,KAA3B,EAAkC,OAAlC;AAAP;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD;AAAA,kBAAOR,OAAO,CAACS;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,IAAD;AAAA,mBAAOT,OAAO,CAACG,aAAf,OAA+BF,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,IAAD;AAAA,kBAEQD,OAAO,CAACI,QAAR,GAAmB,IAAnB,gBAA2B,QAAC,MAAD;AAAQ,UAAA,KAAK,MAAb;AAAc,UAAA,KAAK,EAAC,OAApB;AAA4B,UAAA,OAAO,EAAE,KAAKM,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFnC;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI,QAAC,IAAD;AAAA,kBAEQV,OAAO,CAACI,QAAR,GAAmB,IAAnB,gBAA2B,QAAC,MAAD;AAAQ,UAAA,KAAK,MAAb;AAAc,UAAA,KAAK,EAAC,MAApB;AAA2B,UAAA,OAAO,EAAE,KAAKO,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFnC;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAtC6B;;AAwClC,eAAe3B,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Table, Button} from 'semantic-ui-react';\r\nimport web3 from '../ethereum/web3';\r\nimport Campaign from '../ethereum/campaign';\r\n\r\nclass RequestRow extends Component{\r\n    onApprove= async()=>{\r\n        const campaign= Campaign(this.props.address);\r\n        const accounts= await web3.eth.getAccounts();\r\n        await campaign.methods.approveRequest(this.props.id).send({\r\n            from: accounts[0]\r\n        });\r\n    }\r\n    onFinalize= async()=>{\r\n        const campaign= Campaign(this.props.address);\r\n        const accounts= await web3.eth.getAccounts();\r\n        await campaign.methods.finalizeRequest(this.props.id).send({\r\n            from: accounts[0]\r\n        });\r\n    }\r\n    render(){\r\n        const {Row, Cell}= Table;\r\n        const {id, request, approversCount}= this.props;\r\n        const readyToFinalize= request.approvalCount>(approversCount/2);\r\n        return(\r\n            <Row disabled={request.complete}>\r\n                <Cell>{id}</Cell>\r\n                <Cell>{request.description}</Cell>\r\n                <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\r\n                <Cell>{request.recipient}</Cell>\r\n                <Cell>{request.approvalCount}/{approversCount}</Cell>\r\n                <Cell>\r\n                    {\r\n                        request.complete ? null : (<Button basic color=\"green\" onClick={this.onApprove} >Approve</Button>)\r\n                    }\r\n                </Cell>\r\n                <Cell>\r\n                {\r\n                        request.complete ? null : (<Button basic color=\"teal\" onClick={this.onFinalize} >Finalize</Button>)\r\n                    }\r\n                </Cell>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}