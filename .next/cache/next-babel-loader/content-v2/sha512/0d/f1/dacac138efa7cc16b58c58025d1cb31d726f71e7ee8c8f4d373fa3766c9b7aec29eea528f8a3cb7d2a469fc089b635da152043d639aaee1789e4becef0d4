{"ast":null,"code":"import _regeneratorRuntime from \"C:/margrop/Solidity/crowdfund/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/margrop/Solidity/crowdfund/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"C:/margrop/Solidity/crowdfund/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/margrop/Solidity/crowdfund/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/margrop/Solidity/crowdfund/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/margrop/Solidity/crowdfund/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/margrop/Solidity/crowdfund/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\margrop\\\\Solidity\\\\crowdfund\\\\pages\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Button, Icon } from 'semantic-ui-react';\nimport factoy from '../ethereum/factory';\nimport 'semantic-ui-css/semantic.min.css';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\n/**\r\nTODO:\r\n1. Configure web3 with a provider from metamask.\r\n2. Tell web3 that a deployed copy of CampaignFactory exists. \r\n3. Use Factory instance to retreive a list of deployed campaigns.\r\n4. User React to show something about each campaign.\r\n*/\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    _classCallCheck(this, CampaignIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"renderCampaigns\",\n    value: function renderCampaigns() {\n      var _this = this;\n\n      var items = this.props.campaigns.map(function (address) {\n        return {\n          header: address,\n          description: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"View Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 30\n          }, _this),\n          fluid: true\n        };\n      });\n      return /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Open Campaigns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                content: \"Create Campaign\",\n                icon: \"add circle\",\n                basic: true,\n                color: \"blue\",\n                floated: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), this.renderCampaigns()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var campaigns;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factoy.methods.getDeployedCampaigns().call();\n\n              case 2:\n                campaigns = _context.sent;\n                return _context.abrupt(\"return\", {\n                  campaigns: campaigns\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["C:/margrop/Solidity/crowdfund/pages/index.js"],"names":["React","Component","Card","Button","Icon","factoy","Layout","Link","CampaignIndex","items","props","campaigns","map","address","header","description","fluid","renderCampaigns","methods","getDeployedCampaigns","call"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,a;;;;;;;;;;;;;sCAKe;AAAA;;AACb,UAAMC,KAAK,GAAE,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyB,UAAAC,OAAO,EAAE;AAC3C,eAAO;AACHC,UAAAA,MAAM,EAAED,OADL;AAEHE,UAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFV;AAGHC,UAAAA,KAAK,EAAE;AAHJ,SAAP;AAKH,OANY,CAAb;AAOA,0BAAO,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;;6BACO;AACJ,0BACI,QAAC,MAAD;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAA,mCACI;AAAA,qCACI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAE,iBADb;AAEI,gBAAA,IAAI,EAAE,YAFV;AAGI,gBAAA,KAAK,MAHT;AAGU,gBAAA,KAAK,EAAE,MAHjB;AAII,gBAAA,OAAO,EAAE;AAJb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAYK,KAAKQ,eAAL,EAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH;;;;;;;;;;;uBAhC0BZ,MAAM,CAACa,OAAP,CAAeC,oBAAf,GAAsCC,IAAtC,E;;;AAAjBT,gBAAAA,S;iDACC;AAACA,kBAAAA,SAAS,EAATA;AAAD,iB;;;;;;;;;;;;;;;;;;;EAHaV,S;;AAoC5B,eAAeO,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Button, Icon } from 'semantic-ui-react';\r\nimport factoy from '../ethereum/factory';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Layout from '../components/Layout';\r\nimport {Link} from '../routes';\r\n\r\n/**\r\nTODO:\r\n1. Configure web3 with a provider from metamask.\r\n2. Tell web3 that a deployed copy of CampaignFactory exists. \r\n3. Use Factory instance to retreive a list of deployed campaigns.\r\n4. User React to show something about each campaign.\r\n*/\r\n\r\nclass CampaignIndex extends Component{\r\n    static async getInitialProps(){\r\n        const campaigns= await factoy.methods.getDeployedCampaigns().call();\r\n        return {campaigns};\r\n    }\r\n    renderCampaigns(){\r\n        const items= this.props.campaigns.map(address=>{\r\n            return {\r\n                header: address,\r\n                description: <a>View Campaign</a>,\r\n                fluid: true\r\n            }\r\n        });\r\n        return <Card.Group items={items} />\r\n    }\r\n    render(){\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <h3>Open Campaigns</h3>\r\n                    <Link >\r\n                        <a>\r\n                            <Button\r\n                                content= \"Create Campaign\"\r\n                                icon= \"add circle\"\r\n                                basic color= \"blue\"\r\n                                floated= \"right\"\r\n                            />\r\n                        </a>\r\n                    </Link>\r\n                    {this.renderCampaigns()}\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default CampaignIndex;"]},"metadata":{},"sourceType":"module"}