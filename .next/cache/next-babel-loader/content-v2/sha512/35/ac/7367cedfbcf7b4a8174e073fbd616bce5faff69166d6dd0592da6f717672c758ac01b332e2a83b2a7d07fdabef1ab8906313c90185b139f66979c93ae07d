{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\margrop\\\\Solidity\\\\crowdfund\\\\pages\\\\index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport factoy from '../ethereum/factory';\n/**\r\nTODO:\r\n1. Configure web3 with a provider from metamask.\r\n2. Tell web3 that a deployed copy of CampaignFactory exists. \r\n3. Use Factory instance to retreive a list of deployed campaigns.\r\n4. User React to show something about each campaign.\r\n*/\n\nclass CampaignIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"sta\", void 0);\n  }\n\n  async componentDidMount() {\n    const campaigns = await factoy.methods.getDeployedCampaigns().call();\n    console.log(campaigns);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Campaigns Index!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["C:/margrop/Solidity/crowdfund/pages/index.js"],"names":["React","Component","factoy","CampaignIndex","componentDidMount","campaigns","methods","getDeployedCampaigns","call","console","log","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAqC;AAAA;AAAA;;AAAA;AAAA;;AAEjC,QAAMG,iBAAN,GAAyB;AACrB,UAAMC,SAAS,GAAE,MAAMH,MAAM,CAACI,OAAP,CAAeC,oBAAf,GAAsCC,IAAtC,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH;;AACDM,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAZgC;;AAcrC,eAAeR,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport factoy from '../ethereum/factory';\r\n\r\n/**\r\nTODO:\r\n1. Configure web3 with a provider from metamask.\r\n2. Tell web3 that a deployed copy of CampaignFactory exists. \r\n3. Use Factory instance to retreive a list of deployed campaigns.\r\n4. User React to show something about each campaign.\r\n*/\r\n\r\nclass CampaignIndex extends Component{\r\n    sta\r\n    async componentDidMount(){\r\n        const campaigns= await factoy.methods.getDeployedCampaigns().call();\r\n        console.log(campaigns);\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                Campaigns Index!!\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CampaignIndex;"]},"metadata":{},"sourceType":"module"}